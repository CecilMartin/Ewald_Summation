module load cuda10.0

Weak scaling & Strong scaling on the OpenMP part

Fixing 
Lx = Ly = Lz = 1;
nx = ny = nz = 32;
Choose
xi = 10; m = 8; P = 24; pr = 2; eta = 0.87891;

Weak scaling:
np nthread time_real time_Gridding
256   1 
512   4
1024  16
2048  32

Strong scaling:
np nthread time_real time_Gridding
2048 1
2048 4
2048 16
2048 32


Setting 8 threads:
see the total time complexity

Fixing 
Lx = Ly = Lz = 1;
nx = ny = nz = 32;
Choose
xi = 10; m = 8; P = 24; pr = 2; eta = 0.87891;

Let np from 16 to 1024:
np  nx  time_r_np time_r    time_G_np  time_G    time_FFT time_CuFFT time_cpy
16  32  0.000868  0.000621  0.075014   0.049541  0.002160 0.007352  0.000115
32  40  0.003966  0.001127  0.128978   0.044405  0.006536 0.006924  0.000341
64  50  0.014646  0.003522  0.207497   0.045662  0.008124 0.006711  0.000389
128 64  0.053214  0.013812  0.328829   0.081881  0.012521 0.009724  0.000758
256 80  0.151606  0.048216  0.632330   0.145668  0.032066 0.031189  0.002334
512 100 0.442943  0.146384  1.218666   0.230805  0.062718 0.027331  0.002784
1024 128 1.627443  0.392469  2.438963  0.386494  0.158287 0.046809  0.005779
2048 160 6.344683  1.411643  4.874460  0.673154  0.319782 0.085158  0.011268
4096 200 25.123950 5.447607  9.758581  1.288540  0.596018 0.183044  0.029728
8192 256 102.087076 21.653769 12.361636 1.729268 1.488157 0.313514  0.045492
16384 320 408.375904 86.410157 25.161954 3.469253 2.837561 0.598190 0.088633

Speed up
np speed_ratio_real speed_ratio_gridding speed_ratio_fft
16
32
64
128
256


Fixing h = L / n = 1 / 32; 
Choose
xi = 12; m = 8; P = 24; pr = 2; eta = 1.2656;
Let np from 16 to 1024:
np  L   nx  time_total time_real time_Gridding time_FFT time_kspace time_self
16  1   32
54  1.5 48
128 2   64
250 2.5 80
432 3   96
